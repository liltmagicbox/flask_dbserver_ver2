오후 1:53 2020-10-29
dict sort 속도시험.
놀랍게도 다들 [key] = key
식으로 처리했다.
나름 내가한게 충분히 최고속도였단것으로보고

결론적으로 10만개 파이썬 60ms, 자스 40ms를 보임.ㅇㅋ.
100만개면 자스 0.2초걸림.ㅇㅋ.


==================
1.댓글수,추천수,조회수,좋아요수는,,,[]를내기 vs []하고[]를내기 vs{}를내기
sort된리스트는갖고있는게낫지싶다.ㅇㅋ.
[]를주고,역변환하게하자.ㅇㅋ.ㅇㅇ매변환시 서버에서보유하고있게.그게훨나음.
..별론가;
조회수를
13=[]
12=[]
1=[]
이건좀너무한듯.어따쓰라고.
nolist하나만보내주자.ㅇㅇ.귀찮으니 조회수구현은하지말까싶다.ㅇㅋ..
할거면,sort후에,fluid에 추가를하는걸 리턴하거나, fluid자체를보내거나.ㅇㅋ..
매로드시 그냥 fluid로드하게하자.30키로바이트하려나싶고.
ㅇㅇ말하고보니이미지에비해암것도아님
;;그럼...조회수는필요시알아서되네요.ㅇㅋ..
{13:no,11:no}를 만든뒤에..가안됨.키-밸류니.
[13=[nononononononno]]
허.이거어케하지;
밸류잡고 젤높은숫자부터;흠곤란.
키:밸류
일때, 밸류순정렬하는게 있을거야.ㅇㅋ.
소트리스트는 아무튼 일단 nolist만 깔끔히내보내주고,



2.태그수정렬은

분류태그는
{ 태그명 : [넘버,3234,4244242,]  }
...이어야한다.
이건정렬이랑무관한 key관계.ㅇㅋ.
이대로보내기.개꿀.

13=[]
12=[]
5=[]
1=[]

태그수,조회수 댓글수 좋아요수 를 하도록.ㅇㅋ.
근데보여주려면,뭐가필요할까.. [1313,131331,131414,] , [1,4,0,3..]
{13=[]
3=[]
1=[]
}
[ [13,13125125],[7,12412],[3,1513535],[26,24124]]
면 정렬되겠지.응잘돼~
근데이걸어케구하지..
결과, c를둬서 iter돌리고, 0.06초걸림. 60ms면 좀 크네..흠.
10만개라서. 만개면 0.005초, 5ms걸림.ㅇㅋ.
크롬에선..


3.827
4.720 백만개에 1초걸림.

4.720 안걸림
4.974 200ms걸림

4.974
6.037 1초걸림.
호..하..대단하네.
백만개에 1초면근데길지.
ㅇㅇ체감도완료.확실히그래.

3.905
3.980 75
3.980
4.009 29
4.010
4.114 100
29미리세컨드,10만개.ㅇㅋ..
파이썬은,10만개에 60미리세컨드나옴...
10만개 30ms면, 클라에서하는게백번낫다.ㅇㅋ.
특이하게도 인덱스미리만드는게더느리단것이신기했어..가아니고역시그게빠르지.ㅇㅋ.
c=b[i],a[i]
를쓰자. ()면30ms, []면 10만개에 40ms나옴.ㅇㅋ.

function ma(){
console.log(Date.now())
d={}
for( i=0; i<100000; i++){ d[ parseInt(Math.random()*1000000) ] = parseInt(Math.random()*100) }
console.log(Date.now())

console.log(Date.now())
li=[]
for(i of keys(d) ){ li.push( [d[i],i] ) }
console.log(Date.now())

console.log(Date.now())
a= keys(d)
b= values(d)
c=[]
for( i=0; i<100000; i++){
    c.push( [b[i],a[i]])
    }
console.log(Date.now())
}

dictkey=list1
dictvalue=list
...
a=[1,2,3]
b=[4,5,6]
c=[[1,4],[2,5],[3,6]]???

for i in range(len(a)):
    c.append([a[i],b[i]])

or
for i in dict:
    li.append( [value,key] )

태그정렬은별개로